application {
  name = "novel-memory-service-test"
  version = "1.0.0"
}

gcp {
  project {
    id = "test-project"
  }
}

firestore {
  database {
    id = "test-database"
  }
  collections {
    memories = "test-novel-memories"
    characters = "test-novel-characters"
    plots = "test-novel-plots"
    worldFacts = "test-novel-world-facts"
    contexts = "test-novel-contexts"
  }
}

memory {
  score {
    decayFactor = 0.95
    minRelevance = 0.3
    maxItems = 100
  }
  cache {
    ttl = 600
    maxSize = 10000
  }
  batch {
    size = 500
    timeout = 30
  }
}

search {
  maxResults = 50
  timeout = 5
}

embedding {
  service {
    url = "https://test-embedding-service.example.com"
  }
  cache {
    enabled = false
    ttl = 3600
  }
}

monitoring {
  metrics {
    enabled = false
    prefix = "test.novel.memory.service"
  }
  tracing {
    enabled = false
    samplingRate = 0.1
  }
}

logging {
  level {
    root = "INFO"
    "com.deusexmachina" = "DEBUG"
  }
  pattern {
    console = "%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n"
  }
}

cors {
  allowedOrigins = [
    "https://*.deusexmachina.com",
    "http://localhost:3000"
  ]
  allowedMethods = [
    "GET",
    "POST",
    "PUT", 
    "DELETE",
    "OPTIONS"
  ]
  allowedHeaders = [
    "Authorization",
    "Content-Type",
    "X-Request-ID"
  ]
  maxAge = 3600
}