plugins {
    id 'java'
    id 'com.google.cloud.functions' version '0.9.1'
}

configurations {
    invoker
}

dependencies {
    // Core dependencies
    compileOnly 'com.google.cloud.functions:functions-framework-api:1.1.2'
    
    // Shared utilities
    implementation project(':apps:backend:shared')
    
    // Authentication libraries
    implementation 'com.auth0:java-jwt:4.4.0'
    implementation 'com.google.firebase:firebase-admin:9.2.0'
    
    // JSON processing
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // Validation
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    
    // Local development invoker
    invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.3.2'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.truth:truth:1.1.5'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'com.google.cloud.functions:functions-framework-api:1.1.2'
}

// Task for running function locally
tasks.register("runFunction", JavaExec) {
    main = 'com.google.cloud.functions.invoker.runner.Invoker'
    classpath(configurations.invoker)
    inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
    args(
        '--target', 'com.deusexmachina.functions.AuthFunction',
        '--port', '8080'
    )
    doFirst {
        args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.deusexmachina.functions.AuthFunction'
    }
}