plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.deusexmachina'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

configurations {
    invoker
}

dependencies {
    // Google Cloud Functions
    implementation 'com.google.cloud.functions:functions-framework-api:1.3.0'
    invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.3.0'
    
    // Google Cloud Email API (using Gmail API)
    implementation 'com.google.apis:google-api-services-gmail:v1-rev20240520-2.0.0'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.23.0'
    
    // Jackson for JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.0'
    
    // Jakarta Mail
    implementation 'com.sun.mail:jakarta.mail:2.0.1'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.7.0'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.google.cloud.functions.invoker.runner.Invoker'
    }
}

shadowJar {
    mergeServiceFiles()
}

// Task to run the function locally
task runFunction(type: JavaExec) {
    classpath = configurations.invoker
    main = 'com.google.cloud.functions.invoker.runner.Invoker'
    args(
        '--target', 'com.deusexmachina.email.processor.EmailProcessorFunction',
        '--port', '8080'
    )
    doFirst {
        args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
    }
}

test {
    useJUnitPlatform()
}